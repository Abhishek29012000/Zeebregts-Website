//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace zeebregtsCs.ExchangeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfo", Namespace="http://schemas.datacontract.org/2004/07/ExchangeContactsService")]
    [System.SerializableAttribute()]
    public partial class ContactInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewName {
            get {
                return this.NewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewNameField, value) != true)) {
                    this.NewNameField = value;
                    this.RaisePropertyChanged("NewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldName {
            get {
                return this.OldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OldNameField, value) != true)) {
                    this.OldNameField = value;
                    this.RaisePropertyChanged("OldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExchangeService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddContact", ReplyAction="http://tempuri.org/IService1/AddContactResponse")]
        string AddContact(zeebregtsCs.ExchangeService.ContactInfo ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifyContact", ReplyAction="http://tempuri.org/IService1/ModifyContactResponse")]
        string ModifyContact(zeebregtsCs.ExchangeService.ContactInfo ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveContact", ReplyAction="http://tempuri.org/IService1/RemoveContactResponse")]
        string RemoveContact(zeebregtsCs.ExchangeService.ContactInfo ci);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : zeebregtsCs.ExchangeService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<zeebregtsCs.ExchangeService.IService1>, zeebregtsCs.ExchangeService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddContact(zeebregtsCs.ExchangeService.ContactInfo ci) {
            return base.Channel.AddContact(ci);
        }
        
        public string ModifyContact(zeebregtsCs.ExchangeService.ContactInfo ci) {
            return base.Channel.ModifyContact(ci);
        }
        
        public string RemoveContact(zeebregtsCs.ExchangeService.ContactInfo ci) {
            return base.Channel.RemoveContact(ci);
        }
    }
}
